components:
  securitySchemes:
    oauth2:
      type: "oauth2"
      flows:
        clientCredentials:
          tokenUrl: "/authenticate"
          scopes:
            technology.catalog.read: "Scope required to read catalog data"
      description: "This API uses OAuth 2 with the implicit grant flow."
  examples:
    product-list:
      summary: "Example of a list of products"
      value:
      - id: "367022517"
        name: "GEOMETRIC JACQUARD SHIRT"
        price:
          currency: "EUR"
          value:
            current: 29.95
        link: "https://www.zara.com/es/en/geometric-jacquard-shirt-p01618475.html?v1=367022517"
        brand: "zara"
      - id: "364086315"
        name: "COTTON - LINEN SHIRT"
        price:
          currency: "EUR"
          value:
            current: 29.95
        link: "https://www.zara.com/es/en/cotton---linen-shirt-p01063402.html?v1=364086315"
        brand: "zara"
      - id: "364102053"
        name: "100% LINEN SHIRT"
        price:
          currency: "EUR"
          value:
            current: 35.95
        link: "https://www.zara.com/es/en/100-linen-shirt-p03090470.html?v1=364102053"
        brand: "zara"
      - id: "364102316"
        name: "100% LINEN SHIRT"
        price:
          currency: "EUR"
          value:
            current: 29.95
        link: "https://www.zara.com/es/en/100-linen-shirt-p03090200.html?v1=364102316"
        brand: "zara"
      - id: "367196402"
        name: "METALLIC THREAD RUSTIC SHIRT"
        price:
          currency: "EUR"
          value:
            current: 15.99
            original: 27.95
        link: "https://www.zara.com/es/en/metallic-thread-rustic-shirt-p02298151.html?v1=367196402"
        brand: "zara"
      - id: "364102064"
        name: "100% LINEN SHIRT"
        price:
          currency: "EUR"
          value:
            current: 35.95
        link: "https://www.zara.com/es/en/100-linen-shirt-p03090470.html?v1=364102064"
        brand: "zara"
      - id: "367196336"
        name: "STRETCH SHIRT"
        price:
          currency: "EUR"
          value:
            current: 29.95
        link: "https://www.zara.com/es/en/stretch-shirt-p04408147.html?v1=367196336"
        brand: "zara"
      - id: "364086319"
        name: "COTTON - LINEN SHIRT"
        price:
          currency: "EUR"
          value:
            current: 29.95
        link: "https://www.zara.com/es/en/cotton---linen-shirt-p01063407.html?v1=364086319"
        brand: "zara"
      - id: "370090251"
        name: "STRETCH SHIRT"
        price:
          currency: "EUR"
          value:
            current: 35.95
        link: "https://www.zara.com/es/en/stretch-shirt-p05637225.html?v1=370090251"
        brand: "zara"
    invalid-input-error:
      summary: "Example of an HTTP 400 error"
      value:
        type: "https://example.com/probs/invalid-params"
        title: "Invalid parameters"
        status: 400
        detail: "One or more query parameters is missing or invalid. Please check\
          \ that the 'image' parameter is not empty and that the 'brand' parameter,\
          \ if present, has one of the allowed values.\n"
        instance: "http://example.com/products?image=invalid"
    unauthorized-error:
      summary: "Example of an HTTP 401 error"
      value:
        type: "https://example.com/probs/unauthorized"
        title: "Unauthorized"
        status: 401
        detail: "Authentication is required but not provided or failed."
        instance: "http://example.com/products"
    forbidden-error:
      summary: "Example of an HTTP 403 error"
      value:
        type: "https://example.com/probs/forbidden"
        title: "Forbidden"
        status: 403
        detail: "You are not authorized to perform this request."
        instance: "http://example.com/products"
    not-found-error:
      summary: "Example of an HTTP 404 error"
      value:
        type: "https://example.com/probs/not-found"
        title: "No products found"
        status: 404
        detail: "No products were found matching the given criteria."
        instance: "https://example.com/products?brand=NonexistentBrand"
    rate-limit-error:
      summary: "Example of an HTTP 429 error"
      value:
        type: "https://example.com/probs/rate-limit-exceeded"
        title: "Too many requests"
        status: 429
        detail: "You have exceeded the maximum number of requests allowed."
        instance: "https://example.com/products"
    server-error:
      summary: "Example of an HTTP 500 error"
      value:
        type: "https://example.com/probs/internal-server-error"
        title: "Internal server error"
        status: 500
        detail: "An unexpected error occurred on the server."
        instance: "https://example.com/products"
  schemas:
    Product:
      type: "object"
      properties:
        id:
          type: "string"
          description: "The ID of the product."
          example: "364086319"
          x-faker:
            random.numeric: 9
        name:
          type: "string"
          maxLength: 256
          description: "The name of the product."
          example: "COTTON - LINEN SHIRT"
          x-faker: "commerce.productName"
        price:
          $ref: "#/components/schemas/ProductPrice"
        link:
          type: "string"
          format: "uri"
          description: "URL to the product on the web store."
          example: "https://www.zara.com/es/en/cotton---linen-shirt-p01063407.html?v1=364086319"
          x-faker: "internet.url"
        brand:
          type: "string"
          maxLength: 256
          description: "The brand of the product."
          example: "zara"
          x-faker:
            helpers.arrayElement:
            - - "bershka"
              - "lefties"
              - "massimo_dutti"
              - "oysho"
              - "pull_and_bear"
              - "stradivarius"
              - "tempe"
              - "uterque"
              - "zara"
              - "zara_home"
      additionalProperties: false
      required:
      - "id"
      - "name"
      - "price"
    ProductPrice:
      type: "object"
      properties:
        currency:
          type: "string"
          maxLength: 3
          example: "EUR"
          x-faker:
            helpers.arrayElement:
            - - "EUR"
        value:
          type: "object"
          properties:
            current:
              type: "number"
              format: "float"
              description: "The current price of the product."
              example: 14.95
              x-faker:
                random.number:
                  min: 9.95
                  max: 499.95
                  precision: 0.01
            original:
              type: "number"
              format: "float"
              description: "The original price of the product, in situations where\
                \ there's an applied discount."
              example: 35.95
              x-faker:
                random.number:
                  min: 9.95
                  max: 499.95
                  precision: 0.01
          additionalProperties: false
          required:
          - "current"
      additionalProperties: false
      required:
      - "currency"
      - "value"
    ProductList:
      type: "array"
      items:
        $ref: "#/components/schemas/Product"
      maxItems: 200
    ProblemDetails:
      type: "object"
      properties:
        type:
          type: "string"
          format: "uri"
          description: "A URI reference that identifies the problem type."
          example: "https://example.com/probs/internal-server-error"
        title:
          type: "string"
          maxLength: 256
          description: "A short, human-readable summary of the problem type."
          example: "Internal server error"
        status:
          type: "integer"
          description: "The HTTP status code generated by the origin server for this\
            \ occurrence of the problem."
          example: 500
          minimum: 200
          maximum: 500
        detail:
          type: "string"
          maxLength: 512
          description: "A human-readable explanation specific to this occurrence of\
            \ the problem."
          example: "An unexpected error occurred on the server."
        instance:
          type: "string"
          format: "uri"
          description: "A URI reference that identifies the specific occurrence of\
            \ the problem."
          example: "https://example.com/products"
      additionalProperties: true
  parameters:
    PageNumberQueryParam:
      name: "page"
      in: "query"
      description: "The page number to retrieve when more than one page of results\
        \ exists."
      required: false
      schema:
        type: "integer"
        format: "int32"
        minimum: 1
        default: 1
      example: 1
    PerPageQueryParam:
      name: "perPage"
      in: "query"
      description: "The number of products to return on each page of results."
      required: false
      schema:
        type: "integer"
        format: "int32"
        minimum: 1
        maximum: 50
        default: 5
      example: 5
security:
- oauth2:
  - "technology.catalog.read"
servers:
- url: "https://api.inditex.com/pubvsearch"
  description: "PRO online service"
  x-marketplace-code:
  - "open-developer-portal"
  x-marketplace-publication-type: "online"
- url: "https://api-sandbox.inditex.com/pubvsearch-sandbox"
  description: "PRO sandbox service"
  x-marketplace-code:
  - "open-developer-portal"
  x-marketplace-publication-type: "sandbox"
openapi: "3.0.3"
paths:
  /products:
    get:
      tags:
      - "search"
      operationId: "getProducts"
      summary: "Visually search products"
      description: "Find products visually similar to the image you provide. You provide\
        \ the image you want to find products similar to by sharing its URL. That\
        \ means the image must be stored somewhere before you can use it with this\
        \ operation."
      parameters:
      - name: "image"
        in: "query"
        description: "The URL of the image you want to use on the visual search. The\
          \ URL you provide must conform to the RFC 1738 and be URL encoded. Additionally,\
          \ the maximum length of the URL must be 2000 characters. We support major\
          \ image file formats such as GIF, JPEG, and PNG, with a size limit of 7\
          \ MB."
        required: true
        schema:
          type: "string"
          maxLength: 2000
        example: "https://example.com/shirt.png"
      - $ref: "#/components/parameters/PageNumberQueryParam"
      - $ref: "#/components/parameters/PerPageQueryParam"
      responses:
        "200":
          description: "Successful response containing product search results."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductList"
              examples:
                product-list:
                  $ref: "#/components/examples/product-list"
        "400":
          description: "Invalid request parameters."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
              examples:
                invalid-params:
                  $ref: "#/components/examples/invalid-input-error"
        "401":
          description: "Unauthorized request."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
              examples:
                invalid-params:
                  $ref: "#/components/examples/unauthorized-error"
        "403":
          description: "The request was denied due to lack of permissions."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
              examples:
                unauthorized:
                  $ref: "#/components/examples/unauthorized-error"
        "404":
          description: "No products found for the given search criteria."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
              examples:
                no-results:
                  $ref: "#/components/examples/not-found-error"
        "429":
          description: "Too many requests. The rate limit has been exceeded."
          headers:
            RateLimit-Limit:
              description: "The maximum number of requests allowed in the current\
                \ period."
              schema:
                type: "integer"
            RateLimit-Remaining:
              description: "The number of remaining requests in the current period."
              schema:
                type: "integer"
            RateLimit-Reset:
              description: "The time at which the rate limit resets."
              schema:
                type: "integer"
                format: "unix-time"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
              examples:
                rate-limit:
                  $ref: "#/components/examples/rate-limit-error"
        "500":
          description: "Internal server error."
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
              examples:
                server-error:
                  $ref: "#/components/examples/server-error"
info:
  title: "Visual Search"
  description: "\nFind products that are visually similar to the one in the image\
    \ you provide in the request body. The API searches for products in Zara based\
    \ on the provided image.\n\nThe API returns information about each of the found\
    \ products. The response includes the product ID, its name, its current price\
    \ and also the original price range for products with an applied discount, a link\
    \ to the product Web store, and the brand behind the product.\n"
  version: "1.0.0"
  contact:
    name: "Inditex Tech Developer Portal support team"
    email: "supportapi@inditex.com"
tags:
- name: "search"
  description: "Search operations"
